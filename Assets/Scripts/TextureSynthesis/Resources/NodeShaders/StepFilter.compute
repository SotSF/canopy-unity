#pragma kernel StepKernel

#define TRANSPARENT float4(0,0,0,0)
#define SQRT_3 1.73205080757
Texture2D<float4> InputTex;
RWTexture2D<float4> OutputTex;

uint iWidth;
uint iHeight;

uint oWidth;
uint oHeight;

SamplerState SmpLinearClamp;

bool smooth;

float min;
float max;

[numthreads(16, 16, 1)]
void StepKernel(uint3 id : SV_DispatchThreadID)
{
	float2 dimensions = float2(iWidth, iHeight);
    // if input is larger than output, crop
    // if input is smaller than output, scale if scale selected, otherwise, fill black?
	float newX = (iWidth / float(oWidth)) * id.x;
	float newY = (iHeight / float(oHeight)) * id.y;
	float4 sampled = InputTex.SampleLevel(SmpLinearClamp, float2(newX, newY) / dimensions, 0);
	float4 smoothstepped = sampled * smoothstep(min, max, length(sampled.xyz) / SQRT_3);
	float4 stepped = sampled * step(min, length(sampled.xyz) / SQRT_3);
	OutputTex[id.xy] = smooth ? smoothstepped : stepped;
}
