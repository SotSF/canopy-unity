
#pragma kernel PatternKernel

float a;
float b;
float m1;
float m2;
float n1;
float n2;
float n3;

int height;
int width;

RWTexture2D<float4> outputTex;

bool sf2d(float r, float u) 
{
    float r2 = pow(pow(abs((1 / a) * cos(m1 * u / 4)), n2) + pow(abs((1 / b) * sin(m2 * u / 4)), n3), -1 / n1);
    return r <= r2;
}


[numthreads(16, 16, 1)]
void PatternKernel(uint3 id : SV_DispatchThreadID)
{
    float2 center = float2(width / 2, height / 2);
    float r = distance(id.xy, center);
    float u = atan((id.y - center.y) / (id.x - center.x));

    // Declare a color which is solid red, return it.
    float4 result = float4(1,0,0,1);
    if (sf2d(r,u)) { 
        outputTex[id.xy] = result;
    }
    else {
        outputTex[id.xy] = float4(0,0,0,0);
    }
}